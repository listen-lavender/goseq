// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/listen-lavender/goseq/model (interfaces: SoftRegionDao)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSoftRegionDao is a mock of SoftRegionDao interface
type MockSoftRegionDao struct {
	ctrl     *gomock.Controller
	recorder *MockSoftRegionDaoMockRecorder
}

// MockSoftRegionDaoMockRecorder is the mock recorder for MockSoftRegionDao
type MockSoftRegionDaoMockRecorder struct {
	mock *MockSoftRegionDao
}

// NewMockSoftRegionDao creates a new mock instance
func NewMockSoftRegionDao(ctrl *gomock.Controller) *MockSoftRegionDao {
	mock := &MockSoftRegionDao{ctrl: ctrl}
	mock.recorder = &MockSoftRegionDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSoftRegionDao) EXPECT() *MockSoftRegionDaoMockRecorder {
	return m.recorder
}

// GetSet mocks base method
func (m *MockSoftRegionDao) GetSet(arg0 context.Context, arg1 string) uint16 {
	ret := m.ctrl.Call(m, "GetSet", arg0, arg1)
	ret0, _ := ret[0].(uint16)
	return ret0
}

// GetSet indicates an expected call of GetSet
func (mr *MockSoftRegionDaoMockRecorder) GetSet(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSet", reflect.TypeOf((*MockSoftRegionDao)(nil).GetSet), arg0, arg1)
}

// Hash mocks base method
func (m *MockSoftRegionDao) Hash(arg0 context.Context, arg1 string) uint16 {
	ret := m.ctrl.Call(m, "Hash", arg0, arg1)
	ret0, _ := ret[0].(uint16)
	return ret0
}

// Hash indicates an expected call of Hash
func (mr *MockSoftRegionDaoMockRecorder) Hash(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hash", reflect.TypeOf((*MockSoftRegionDao)(nil).Hash), arg0, arg1)
}
